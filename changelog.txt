Gan of 4 demo 1
By: Carlos Julio Pérez Quizhpe

	* Maven:
		+ Generating project:
		mvn archetype:generate -DgroupId=ec.cjpq.go4demo1 -DartifactId=go4demo1 -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false	
		+ Running specific test:
			mvn clean test -Dtest=ec.cjpq.go4demo1.creationalPatterns.factorymethod.ShapeFactoryTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.creationalPatterns.abstractfactory.FactoryProducerTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.creationalPatterns.singleton.SingleObjectTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.creationalPatterns.builder.MealBuilderTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.creationalPatterns.prototype.ShapeCacheTest
			
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.adapter.AudioPlayerTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.bridge.CircleTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.composite.EmployeeTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.decorator.RedShapeDecoratorTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.facade.ShapeMakerTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.flyweight.ShapeFactoryTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.structuralPatterns.proxy.ProxyImageTest 

			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.chainofresponsibility.AbstractLoggerTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.command.BrokerTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.interpreter.ExpressionTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.iterator.NameRepositoryTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.mediator.UserTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.memento.OriginatorTest
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.state.ContextTest 
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.strategy.ContextTest 
			mvn clean test -Dtest=ec.cjpq.go4demo1.behavioralpatterns.templatemethod.GameTest 

	* Git:
		+ Quick setup — if you’ve done this kind of thing before:
		https://github.com/carlosjulioperez/go4demo1.git

		+ …or create a new repository on the command line:
		echo "# go4demo1" >> README.md
		git init
		git add README.md
		git commit -m "first commit"
		git remote add origin https://github.com/carlosjulioperez/go4demo1.git
		git push -u origin master

		+ …or push an existing repository from the command line:
		git remote add origin https://github.com/carlosjulioperez/go4demo1.git
		git push -u origin master

	* Shell:
		+ Search and replace string in the current folder:
			http://unix.stackexchange.com/questions/112023/how-can-i-replace-a-string-in-a-files

			+ Non recursive:
				sed -i -- 's/foo/bar/g' *
				sed -i -- 's/Buider/Builder/g' *

			+ Recursive:
				find . -type f -exec sed -i 's/Builder/builder/g' {} +
structuralPatterns

		* Delete all swp files:]
			http://superuser.com/questions/480367/whats-the-easiest-way-to-delete-vim-swapfiles-ive-already-recovered-from

			find ./ -type f -name "\.*sw[klmnop]" -delete
			find ./ -type f -name "\.*swp" -delete

